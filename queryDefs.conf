#This is the query definitions configuration file for IOC_Extractor. You can edit this file to add your own query definitions. When IOC_Extractor generates it's queries, it does so based on the information it pulls from an IOC list Excel file. Certain types of information such as MD5 hashes, URLs, etc are gathered and substituted into predefined queries for use in various lag analysis engines. Currently IOC_Extractor generated queries defined as either Splunk or TAP queries, however the query structure itself may be used in other log analysis engine considering there are no special character conflicts, etc when executing IOC_Extractor.

#Each list of data, such as URLs, or MD5s, etc, are encapsulated in quotes and separated by ORs. For example, IOC_Extractor recovers 3 MD5 hashes from an IOC Excel file. It then plugs the data in the following format into all relevant MD5 queries below (minus the colons) : "AABBCCDDEEFF00112233445566778899" OR "99887766554433221100FFEEDDCCBBAA" OR "00112233445566778899AABBCCDDEEFF" :.

#In each query defined below, or queries that you define, in the portion of your query in which you wish to have a list of resources such as MD5s seperated by ORs, or IPs seperated by ORs, etc, you need to use one of the following "placeholders" listed below. 

#List of MD5s place holder : "md5Obj"
#List of URLs place holder : "urlObj"
#List of IPs place holder : "ipObj"
#List of emails place holder : "emailObj"

#So for instance, if you look at the first predefined query, at the end "md5Obj" will be replaced by the list of MD5 values generated by IOC_Extractor.

#When defining your own queries, remember to use the query objects in place of the actual data in your query. Also remember to precede your query with either TAP or Splunk followed by two colons. The script uses this to identify the type of query and output it appropriately. If you define your own query and want IOC_Extractor to utilize it, do not use a # sign. The # sign will exclude a defined query from being generated into the output of IOC_Extractor. Be sure to precede Splunk and TAP queries in your definition block with either "SPLUNK::" or "TAP::".

#If you understand all of this information, feel free to remove the description information above and including this line for readability sake.

#--- BEGIN QUERY DEFINITION BLOCK ---
TAP::metaclass:file_xfer class:bro_files md5:"md5Obj"
TAP::metaclass:email class:bro_smtp  md5:"md5Obj"
TAP::domain:/.*"urlObj".*/ | groupby class
TAP::(domain:/.*"urlObj".*/ OR referrer:/.*"urlObj".*/) | groupby class
TAP::Metaclass:http_proxy class:Bro_http "urlObj"
TAP::Metaclass:http_proxy class:Bluecoat_http_proxy "urlObj"
TAP::Metaclass:dns class:Bro_dns "urlObj"
TAP::Metaclass:auth class:F5_bigip_apm "urlObj"
TAP::Metaclass:app_transaction class:F5_bigip_tmm "urlObj"
TAP::class:bro_http "urlObj":"urlObj" |groupby class
TAP::class:bro_http "urlObj":/.*<"urlObj"/INFORMATION.*/ |groupby class
TAP::class:bro_http "urlObj":"urlObj" |groupby referrer
TAP::IP:"ipObj" | groupby class
TAP::class:bro_files srcipv4:"ipObj"  | groupby dstipv4
TAP::class:bro_files dstipv4:"ipObj" | groupby srcipv4
SPLUNK::index=proxy sourcetype=bcoat_proxysg "urlObj"
SPLUNK::index=proxy sourcetype=proxy_apache "urlObj"
SPLUNK::index=proxy sourcetype=orange "urlObj"
SPLUNK::index=proxy sourcetype=proxy_akamai "urlObj"
SPLUNK::index=proxy sourcetype=bcoat_proxysg AND "urlObj"
SPLUNK::Index=firewall sourcetype=juniper host="urlObj"
SPLUNK::Index=firewall sourcetype=opsec action=accept "urlObj"
SPLUNK::index=proxy sourcetype=bcoat_proxysg AND "ipObj"
SPLUNK::Index=firewall sourcetype=juniper host="ipObj"
SPLUNK::Index=firewall sourcetype=opsec action=accept "ipObj"
SPLUNK::index=malware sourcetype=fe_xml "md5Obj"
SPLUNK::metaclass:email class:bro_smtp | groupby ["emailObj", "emailObj"]
#--- END QUERY DEFINITION BLOCK ---
